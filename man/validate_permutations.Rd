% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/relabelling-validation.R
\name{validate_permutations}
\alias{validate_permutations}
\alias{validate_permutations.list}
\alias{validate_permutations.matrix}
\alias{validate_permutations.numeric}
\title{Validate Permutations}
\usage{
validate_permutations(x, n_chains, n_iters)

\method{validate_permutations}{list}(x, n_chains, n_iters)

\method{validate_permutations}{matrix}(x, n_chains, n_iters)

\method{validate_permutations}{numeric}(x, n_chains, n_iters)
}
\arguments{
\item{x}{list; matrix; vector. Object to be coerced into permutations.}

\item{n_chains, n_iters}{integer. Dimensions to check against or be assumed.}
}
\description{
Validate or create described permutation structure.
}
\section{Permutations}{

Permutations are stored in a list where \eqn{i^{th}} elements corresponds to
the \eqn{i^{th}} chain.

Each element is a matrix with one permutation per row for each iteration.
Note that
\itemize{
\item A vector can be supplied to apply the same scheme to all MCMC output.
\item A matrix can be supplied to apply the same relabelling to all chains.
\item \code{NULL} can be supplied to use \code{\link[=boys_henderson_2002]{boys_henderson_2002()}}.
}

A permutation of \code{c(3, 1, 2)} denotes relabelling of
\itemize{
\item \code{1 -> 3}
\item \code{2 -> 1}
\item \code{3 -> 2}
}
}

\keyword{internal}
