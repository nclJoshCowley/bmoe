[{"path":"https://ncljoshcowley.github.io/bmoe/articles/component-memoisation.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Memoisation of Component Allocation Draws","text":"Explains reason memoisation within key functionality nuance understood users package.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/articles/component-memoisation.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Memoisation of Component Allocation Draws","text":"Suppose fit Bayesian Mixture Experts analysis. new_data, defined , want calculate OOS log likelihood per observation; make predictions based predictors new data. functionality achieve objects isolated bmoe::calculate_pointwise_log_lik(); bmoe:::predict.bmoe_fit() (callable stats::predict). functions use draw new samples posterior distribution. distribution inputs , samples may slightly different due randomness quantity. Hence, memoise function extract samples draws denoting component allocations remain unchanged unless object new_data changed. see , consider following cleaned output R console. observe second attempt draw z new data returned almost immediately, values. Whereas modifying inputs forces cache invalid new draws produced.","code":"object <- example_bmoe_fit(multiple_y = TRUE) new_data <- object$new_data[1:4, ] z <- calculate_component_samples(object, new_data) memoise::is.memoised(calculate_component_samples) #> [1] TRUE   system.time({   z <- calculate_component_samples(object, new_data)   print(z) }) #> [MESSAGE]: Drawing new allocation samples from relevant distribution #> #> Output summarised over 10000 iterations and 2 chains: #>  #> varname = 'z' #>  #> [1] 2.08050 2.00210 2.17815 1.83230 #>    user  system elapsed  #>    5.59    0.16    5.73   system.time({   z <- calculate_component_samples(object, new_data)   print(z) }) #> Output summarised over 10000 iterations and 2 chains: #>  #> varname = 'z' #>  #> [1] 2.08050 2.00210 2.17815 1.83230 #>    user  system elapsed  #>    0.02    0.00    0.02   system.time({   z <- calculate_component_samples(object, new_data[1:2, ])   print(z) }) #> [MESSAGE]: Drawing new allocation samples from relevant distribution #> #> Output summarised over 10000 iterations and 2 chains: #> #> varname = 'z' #>  #> [1] 2.0798 1.9923 #>    user  system elapsed  #>    5.02    0.12    5.13"},{"path":"https://ncljoshcowley.github.io/bmoe/articles/component-memoisation.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Memoisation of Component Allocation Draws","text":"Using object new_data pointwise log likelihood function prediction function use component allocation samples. Note functionality persist across R sessions message produced calculate_component_samples samples new draws posterior.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Josh Cowley. Author, maintainer.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cowley J (2024). bmoe: Bayesian Mixture Experts. R package version 0.3.0.9001, https://ncljoshcowley.github.io/bmoe/.","code":"@Manual{,   title = {bmoe: Bayesian Mixture of Experts},   author = {Josh Cowley},   year = {2024},   note = {R package version 0.3.0.9001},   url = {https://ncljoshcowley.github.io/bmoe/}, }"},{"path":"https://ncljoshcowley.github.io/bmoe/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"Bayesian Mixture of Experts","text":"repository contains R package focus Mixture Experts (MoE) applied Bayesian linear censored regression. Originally used yet published thesis, work ongoing make publicly accessible package easier use. Tasks remaining include Adding pkgdown improving documentation (README, vignettes, etc.), Possibly migrating Stan avoid JAGS ‘ones trick’, Removing unnecessary code dependencies, Submitting CRAN wider use.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Mixture of Experts","text":"can install development version bmoe GitHub :","code":"remotes::install_github(\"nclJoshCowley/bmoe\")"},{"path":"https://ncljoshcowley.github.io/bmoe/index.html","id":"model-description","dir":"","previous_headings":"","what":"Model Description","title":"Bayesian Mixture of Experts","text":"present Mixture Experts model finite mixture model K parametric linear regressions, concomitant weighting parameters also depend predictors. $$     f(\\boldsymbol{y_i} | \\boldsymbol{x}_i, \\boldsymbol{\\omega}, \\boldsymbol{\\theta})         = \\sum_{k=1}^K             \\eta_k(\\boldsymbol{x}_i | \\boldsymbol{\\omega}_k)             f_k(\\boldsymbol{y_i} | \\boldsymbol{x}_i, \\boldsymbol{\\theta}_k) $$ components’ distribution currently limited (conditionally independent) multiple linear regressions response variable can potentially left-censored.","code":""},{"path":[]},{"path":"https://ncljoshcowley.github.io/bmoe/index.html","id":"simulation","dir":"","previous_headings":"Worked Example","what":"Simulation","title":"Bayesian Mixture of Experts","text":"can simulate data models using bmoe::simulate_bmoe(). Alternatively, one can use example wrapper utilise default arguments.","code":"example_sim <- bmoe::example_simulate_bmoe()  example_sim$data #> # A tibble: 180 × 4 #>       y01     x01     x02     x03 #>     <dbl>   <dbl>   <dbl>   <dbl> #>  1 -4.03  -1.07   -0.0269 -1.03   #>  2  1.26  -1.36   -1.34    0.901  #>  3 -4.38   1.37   -2.21   -0.277  #>  4 -0.490 -0.463   0.0581  0.0647 #>  5 -0.211  0.0454 -0.446  -0.406  #>  6  7.45   0.456   0.956   0.927  #>  7  4.92   1.03    1.78    2.56   #>  8 -0.140 -0.312  -0.428   0.222  #>  9 -0.162  0.195   0.0182 -0.836  #> 10  2.69   2.47   -1.46   -0.473  #> # ℹ 170 more rows"},{"path":"https://ncljoshcowley.github.io/bmoe/index.html","id":"fitting","dir":"","previous_headings":"Worked Example","what":"Fitting","title":"Bayesian Mixture of Experts","text":"require prior hyperparameters models; default vague prior parameter number components (K) assumed known must set user. simulation study results, one can pass simulation directly. generally, package provides extended formula-data interface. interface goes beyond base R formula system can model multiple response variables conditionally independent (conditional component membership) use + symbol LHS. allow two sets predictors can separated regression purposes component probability weighting purposes using |. example, y01 + y02 ~ x01 + x02 + x03 | x03 implies two response variables, y01 y02, regressed linear predictor formed x01 + x02 + x03 according component probabilities based linear predictor formed x03.","code":"example_prior <- bmoe::bmoe_prior(k = 3)  example_prior #> $k #> [1] 3 #>  #> $regr_prec #> [1] 0.1 #>  #> $wt_prec #> [1] 1 #>  #> $prec_shape #> [1] 2 #>  #> $prec_rate #> [1] 1 bmoe::bmoe(example_sim, prior = example_prior) example_fit <-   bmoe::bmoe(     y01 ~ x01 + x02 + x03,     data = example_sim$data,     prior = example_prior   )"},{"path":"https://ncljoshcowley.github.io/bmoe/index.html","id":"reporting","dir":"","previous_headings":"Worked Example","what":"Reporting","title":"Bayesian Mixture of Experts","text":"Analysis reports can generated fitted object desired file name.","code":"bmoe::render_bmoe_fit(example_fit, \"report-name\")"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/apply_relabelling.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Relabelling Scheme to bmoe — apply_relabelling","title":"Apply Relabelling Scheme to bmoe — apply_relabelling","text":"Allows swapping component labels, per MCMC iteration, mitigate label switching.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/apply_relabelling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Relabelling Scheme to bmoe — apply_relabelling","text":"","code":"apply_relabelling(object, permutations = NULL)  # S3 method for bmoe_fit apply_relabelling(object, permutations = NULL)  table_permutations(permutations)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/apply_relabelling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Relabelling Scheme to bmoe — apply_relabelling","text":"object Object inherits bmoe_fit. permutations list. See Permutations section.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/apply_relabelling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Relabelling Scheme to bmoe — apply_relabelling","text":"bmoe_fit object switched labels.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/apply_relabelling.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Apply Relabelling Scheme to bmoe — apply_relabelling","text":"table_permutations(): Calculate summary permutations object.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/apply_relabelling.html","id":"permutations","dir":"Reference","previous_headings":"","what":"Permutations","title":"Apply Relabelling Scheme to bmoe — apply_relabelling","text":"Permutations stored list \\(^{th}\\) elements corresponds \\(^{th}\\) chain. element matrix one permutation per row iteration. Note vector can supplied apply scheme MCMC output. matrix can supplied apply relabelling chains. NULL can supplied use boys_henderson_2002(). permutation c(3, 1, 2) denotes relabelling 1 -> 3 2 -> 1 3 -> 2","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/artificial_Surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Artificial Censoring — artificial_Surv","title":"Artificial Censoring — artificial_Surv","text":"Convert numeric vector survival::Surv object censoring chosen quantiles.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/artificial_Surv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Artificial Censoring — artificial_Surv","text":"","code":"artificial_Surv(x, q_cens)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/artificial_Surv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Artificial Censoring — artificial_Surv","text":"x vector. Uncensored numerical data. q_cens numeric [0, 1]. Optional artificial left-censoring level.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/artificial_Surv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Artificial Censoring — artificial_Surv","text":"Surv object.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-allocation-vis.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Posterior Group Membership, Ordered by Rank — bmoe-allocation-vis","title":"Visualise Posterior Group Membership, Ordered by Rank — bmoe-allocation-vis","text":"Combination allocation probabilities quantile plots","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-allocation-vis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Posterior Group Membership, Ordered by Rank — bmoe-allocation-vis","text":"","code":"visualise_allocations_with_response_data(object, .chain, .rank_by)  visualise_allocation_data(object, .chain)  visualise_response_data(object, .plot_by, .rank_by)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-allocation-vis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Posterior Group Membership, Ordered by Rank — bmoe-allocation-vis","text":"object Object inherits bmoe_fit. .chain integer. chain indexes use posterior allocations. .rank_by expression. Column use ordering (y-axis). .plot_by expression. Column plotted (x-axis).","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-allocation-vis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualise Posterior Group Membership, Ordered by Rank — bmoe-allocation-vis","text":"consistency plot, ordering based single chosen response variable.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-allocation-vis.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Visualise Posterior Group Membership, Ordered by Rank — bmoe-allocation-vis","text":".plot_by .rank_by can censored (<Surv>).","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-allocation-vis.html","id":"posterior-allocation-plot","dir":"Reference","previous_headings":"","what":"Posterior Allocation Plot","title":"Visualise Posterior Group Membership, Ordered by Rank — bmoe-allocation-vis","text":"Histogram showing corresponding proportions component allocation per observation.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-allocation-vis.html","id":"na","dir":"Reference","previous_headings":"","what":"NA","title":"Visualise Posterior Group Membership, Ordered by Rank — bmoe-allocation-vis","text":"Histogram showing corresponding proportions component allocation per observation.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-args.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian MoE (bmoe) Arguments — bmoe-args","title":"Bayesian MoE (bmoe) Arguments — bmoe-args","text":"Helper functions assist supplying arguments bmoe().","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian MoE (bmoe) Arguments — bmoe-args","text":"","code":"bmoe_prior(k, ...)  bmoe_jags_n(...)  bmoe_inits(seed_base, .RNG.name = \"base::Wichmann-Hill\", ...)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian MoE (bmoe) Arguments — bmoe-args","text":"k integer. Assumed number components. ... Overwrite default values. seed_base numeric. Seed set equal seed_base multiplied chain index. .RNG.name character. JAGS RNG method.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-args.html","id":"prior","dir":"Reference","previous_headings":"","what":"Prior","title":"Bayesian MoE (bmoe) Arguments — bmoe-args","text":"Hyper-parameters must passed prior argument bold. k, number components, assumed known. regr element-wise IID Normal 0 mean regr_prec precision. wt element-wise IID Normal 0 mean wt_prec precision. prec element-wise IID Gamma prec_shape prec_rate.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-args.html","id":"jags-controls","dir":"Reference","previous_headings":"","what":"JAGS Controls","title":"Bayesian MoE (bmoe) Arguments — bmoe-args","text":"n.adapt controls number discarded samples adaptation stage. n.update controls number discarded samples warm-stage. n.iter controls many samples saved. n.thin controls thinning, every \\(n^th\\) sample kept. n.chains controls number chains.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-args.html","id":"jags-initial-values","dir":"Reference","previous_headings":"","what":"JAGS Initial Values","title":"Bayesian MoE (bmoe) Arguments — bmoe-args","text":"Optional chain starting values, described rjags::jags.model().","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-deprec.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated Functions — bmoe-deprec","title":"Deprecated Functions — bmoe-deprec","text":"functions used removed v1.0.0.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-deprec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated Functions — bmoe-deprec","text":"","code":"calculate_pointwise_log_lik(object, new_data)  calculate_log_lik(object, new_data)  calculate_component_samples(object, new_data)  calculate_x_regr(object, new_data)  calculate_posterior_y_mean(object, new_data, z, separate = FALSE)  calculate_posterior_y_sd(object, z, separate = FALSE)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-deprec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated Functions — bmoe-deprec","text":"object Object inherits bmoe_fit. new_data data frame. Similar structure original data argument. Setting new_data = NULL signals observed data used. z bmoe_array. Component allocation samples (latent variable). separate logical. Output split response variable TRUE.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-allocated.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Allocated Quantities from Model Fit — bmoe-extract-allocated","title":"Extract Allocated Quantities from Model Fit — bmoe-extract-allocated","text":"Allocated versions generated quantities allocation samples, z.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-allocated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Allocated Quantities from Model Fit — bmoe-extract-allocated","text":"","code":"extract_allocated_y_posterior_mean(object, new_data, z = NULL)  extract_allocated_y_posterior_sd(object, new_data, z = NULL)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-allocated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Allocated Quantities from Model Fit — bmoe-extract-allocated","text":"object Object inherits bmoe_fit. new_data data frame. Similar structure original data argument. Setting new_data = NULL signals observed data used. z bmoe_array. MCMC samples used integrate components. Defaults extract_allocation_samples().","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-allocated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Allocated Quantities from Model Fit — bmoe-extract-allocated","text":"quantities returned bmoe_array() varying dimension. Note n_s_new denotes number rows new_data observed data new_data NULL valued. extract_allocated_y_posterior_mean() dim(.) = c(n_iters, n_chains, n_s_new, n_y). extract_allocated_y_posterior_sd() Serves different purpose extract_y_posterior_sd() since parameters recycled per observation new_data. dim(.) = c(n_iters, n_chains, n_s_new, n_y).","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Data from Model Fit — bmoe-extract-data","title":"Extract Data from Model Fit — bmoe-extract-data","text":"Getter functions data used bmoe model fit.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Data from Model Fit — bmoe-extract-data","text":"","code":"extract_x_regr(object, new_data)  extract_x_wt(object, new_data)  extract_y(object, new_data)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Data from Model Fit — bmoe-extract-data","text":"object Object inherits bmoe_fit. new_data data frame. Similar structure original data argument. Setting new_data = NULL signals observed data used.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Data from Model Fit — bmoe-extract-data","text":"extract_y() returns list vectors, one per y variable.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-quantities.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Generated Quantities from Model Fit — bmoe-extract-quantities","title":"Extract Generated Quantities from Model Fit — bmoe-extract-quantities","text":"Offline calculations model artefacts bmoe model fit.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-quantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Generated Quantities from Model Fit — bmoe-extract-quantities","text":"","code":"extract_y_posterior_mean(object, new_data)  extract_y_posterior_sd(object)  extract_allocation_probs(object, new_data)  extract_allocation_samples(object, new_data)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-quantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Generated Quantities from Model Fit — bmoe-extract-quantities","text":"object Object inherits bmoe_fit. new_data data frame. Similar structure original data argument. Setting new_data = NULL signals observed data used.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-extract-quantities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Generated Quantities from Model Fit — bmoe-extract-quantities","text":"quantities returned bmoe_array() varying dimension. Note n_s_new denotes number rows new_data observed data new_data NULL valued. extract_y_posterior_mean() dim(.) = c(n_iters, n_chains, n_s_new, n_y, n_k). extract_y_posterior_sd() dim(.) = c(n_iters, n_chains, n_y, n_k). extract_allocation_probs() dim(.) = c(n_iters, n_chains, n_s_new, n_k). extract_allocation_samples() dim(.) = c(n_iters, n_chains, n_s_new).","code":""},{"path":[]},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-log-lik.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Log Likelihood from Model Fit — bmoe-log-lik","title":"Extract Log Likelihood from Model Fit — bmoe-log-lik","text":"Offline calculations log likelihood(s) bmoe model fit.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-log-lik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Log Likelihood from Model Fit — bmoe-log-lik","text":"","code":"extract_log_lik(object, new_data)  extract_pointwise_log_lik(object, new_data)  extract_componentwise_pointwise_log_lik(object, new_data)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-log-lik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Log Likelihood from Model Fit — bmoe-log-lik","text":"object Object inherits bmoe_fit. new_data data frame. Similar structure original data argument. Setting new_data = NULL signals observed data used.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-log-lik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Log Likelihood from Model Fit — bmoe-log-lik","text":"extract_log_lik() Scalar log likelihood MCMC iteration. dim(.) = c(n_iters, n_chains, 1). extract_pointwise_log_lik() Pointwise likelihood sum component contribution, weighted allocation probabilities. dim(.) = c(n_iters, n_chains, n_s_new, n_y, n_k). extract_componentwise_pointwise_log_lik() Evaluated component (expert) observation y. dim(.) = c(n_iters, n_chains, n_s_new, n_y, n_k).","code":""},{"path":[]},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Mixture of Experts Package — bmoe-package","title":"Bayesian Mixture of Experts Package — bmoe-package","text":"Bayesian Mixture Experts (MoE) applied possibly left-censored linear regression.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Mixture of Experts Package — bmoe-package","text":"object Object inherits bmoe_fit. new_data data frame. Similar structure original data argument. Setting new_data = NULL signals observed data used.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-package.html","id":"model-specification","dir":"Reference","previous_headings":"","what":"Model Specification","title":"Bayesian Mixture of Experts Package — bmoe-package","text":"TODO","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-plot.html","id":null,"dir":"Reference","previous_headings":"","what":"List of MoE Analysis Plot Objects — bmoe-plot","title":"List of MoE Analysis Plot Objects — bmoe-plot","text":"Creates nested list ggplot2 objects partitioned data, requires user add layers.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of MoE Analysis Plot Objects — bmoe-plot","text":"","code":"# S3 method for bmoe_fit autoplot(object, varname, type = \"none\", ..., new_data)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of MoE Analysis Plot Objects — bmoe-plot","text":"object Object inherits bmoe_fit. varname character. Variable name defined model. type choice. Name supported plot type including \"none\", plots empty user adds layers. \"density\", useful distribution visualisation. \"trace\", useful verifying chain convergence. \"acf\", autocorrelation MCMC samples discrete lags. Alternatively one can pass list custom layers added. ... Extra arguments silently ignored. new_data Passed extract_log_lik(); ignored otherwise.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-render-internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions used in Analysis Report — bmoe-render-internal","title":"Functions used in Analysis Report — bmoe-render-internal","text":"Functions used anywhere bmoe-analysis.qmd.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-render-internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions used in Analysis Report — bmoe-render-internal","text":"","code":".set_bmoe_render_options(object, is_child, fig.asp)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe-render-internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions used in Analysis Report — bmoe-render-internal","text":"object Object inherits bmoe_fit. is_child logical. options set FALSE. fig.asp numeric. Default aspect ratio per panel, per plot.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Mixture of Experts Linear Regression. — bmoe","title":"Bayesian Mixture of Experts Linear Regression. — bmoe","text":"Fits model JAGS.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Mixture of Experts Linear Regression. — bmoe","text":"","code":"bmoe(object, ..., prior, jags_n = bmoe_jags_n(), inits = NULL)  # S3 method for formula bmoe(object, data, ..., prior, jags_n = bmoe_jags_n(), inits = NULL)  # S3 method for bmoe_sim bmoe(object, ..., prior, jags_n = bmoe_jags_n(), inits = NULL)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Mixture of Experts Linear Regression. — bmoe","text":"object object. formula simulated object. ... dots future extensions must empty. prior named list. See Prior section. jags_n named list. See JAGS Controls section. inits list. Passed rjags::jags.model(). data data frame. used modelling.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe.html","id":"prior","dir":"Reference","previous_headings":"","what":"Prior","title":"Bayesian Mixture of Experts Linear Regression. — bmoe","text":"Hyper-parameters must passed prior argument bold. k, number components, assumed known. regr element-wise IID Normal 0 mean regr_prec precision. wt element-wise IID Normal 0 mean wt_prec precision. prec element-wise IID Gamma prec_shape prec_rate.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe.html","id":"jags-controls","dir":"Reference","previous_headings":"","what":"JAGS Controls","title":"Bayesian Mixture of Experts Linear Regression. — bmoe","text":"n.adapt controls number discarded samples adaptation stage. n.update controls number discarded samples warm-stage. n.iter controls many samples saved. n.thin controls thinning, every \\(n^th\\) sample kept. n.chains controls number chains.","code":""},{"path":[]},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe_array.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC Array Type — bmoe_array","title":"MCMC Array Type — bmoe_array","text":"MCMC array structure, c(n_iters, n_chains, dim(.)[1], dim(.)[2], ...), used package.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC Array Type — bmoe_array","text":"","code":"bmoe_array(x, ...)  # S3 method for array bmoe_array(x, ..., varname)  # S3 method for mcarray bmoe_array(x, ...)  # S3 method for bmoe_array print(x, fun = mean, ...)  # S3 method for bmoe_array tidy(x, ..., .dimnames = NULL)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC Array Type — bmoe_array","text":"x object. coerced different format name used generic. ... Passed S3 methods; ignored bmoe_array. varname character. Variable name stored quantity. fun function. Function summarise printing. .dimnames character. Default behaviour adds .term <chr>; supplying dimension names adds column indices dimension.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe_array.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"MCMC Array Type — bmoe_array","text":"general MCMC array use, consider packages posterior mcmcr original object types rjags coda.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe_array_to_pred_tb.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert bmoe_array to Prediction Table — bmoe_array_to_pred_tb","title":"Convert bmoe_array to Prediction Table — bmoe_array_to_pred_tb","text":"Creates list column per response (class) element draws tibble containing .iter, .chain .value single parameter.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe_array_to_pred_tb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert bmoe_array to Prediction Table — bmoe_array_to_pred_tb","text":"","code":"bmoe_array_to_pred_tb(x, .key)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe_array_to_pred_tb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert bmoe_array to Prediction Table — bmoe_array_to_pred_tb","text":"x bmoe_array object. .key character. Names use output, length dim(x)[4].","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe_yx.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixture of Experts Implementation — bmoe_yx","title":"Mixture of Experts Implementation — bmoe_yx","text":"Implementation Mixture Experts models.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe_yx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixture of Experts Implementation — bmoe_yx","text":"","code":"bmoe_yx(y_list, x_regr, x_wt, prior, jags_n, inits)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/bmoe_yx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixture of Experts Implementation — bmoe_yx","text":"y_list list. Response data per element; length 1 univariate. x_regr, x_wt matrix. Regression weighting matrices. prior named list. See Prior section. jags_n named list. See JAGS Controls section. inits list. Passed rjags::jags.model().","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/boys_henderson_2002.html","id":null,"dir":"Reference","previous_headings":"","what":"Relabelling Algorithm, Boys & Henderson (2002) — boys_henderson_2002","title":"Relabelling Algorithm, Boys & Henderson (2002) — boys_henderson_2002","text":"Relabelling algorithm detailed paper \"determining order Markov dependence observed process\" (Boys & Henderson, 2002).","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/boys_henderson_2002.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relabelling Algorithm, Boys & Henderson (2002) — boys_henderson_2002","text":"","code":"boys_henderson_2002(z, start = 2, z_max = max(z))"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/boys_henderson_2002.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relabelling Algorithm, Boys & Henderson (2002) — boys_henderson_2002","text":"z bmoe_array. Component allocation output bmoe_fit. start integer. Required starting point algorithm. z_max integer. Maximum possible value z.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/boys_henderson_2002.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relabelling Algorithm, Boys & Henderson (2002) — boys_henderson_2002","text":"See Permutations section apply_relabelling().","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/boys_henderson_2002.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relabelling Algorithm, Boys & Henderson (2002) — boys_henderson_2002","text":"Read paper full details; aim minimise 'disagreement', \\(    D        = - \\sum_{= 1}^n \\mathbb{} \\left(            \\nu_m(z_i^{(m)}) = \\hat{z}_i^{(m - 1)}        \\right) \\) \\(\\nu_m\\) candidate permutation chosen; \\(\\hat{z}\\) marginal posterior mode MCMC iterations point. relabelling applied per MCMC iterations, \\(m = m_0, \\dots, M\\) user defines \\(m_0\\) using start argument.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/boys_henderson_2002.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Relabelling Algorithm, Boys & Henderson (2002) — boys_henderson_2002","text":"Boys, R. J. & Henderson, D. . 2002 determining order markov dependence observed process governed hidden markov model. Scientific Programming 10 (3), 241–251.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/complete_jags_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete JAGS Fit — complete_jags_fit","title":"Complete JAGS Fit — complete_jags_fit","text":"Fits model JAGS (compilation, warm-sampling) modern progress bar knitrProgressBar.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/complete_jags_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete JAGS Fit — complete_jags_fit","text":"","code":"complete_jags_fit(file, data, inits, jags_n, varnames)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/complete_jags_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete JAGS Fit — complete_jags_fit","text":"file, data, inits Passed rjags::jags.model(). jags_n named list. See JAGS Controls section. varnames character. Variable names monitored via JAGS.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/complete_jags_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete JAGS Fit — complete_jags_fit","text":"list data: input. model: object returned jags.model. output: list mcarray objects. jags_n: input.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/complete_jags_fit.html","id":"jags-controls","dir":"Reference","previous_headings":"","what":"JAGS Controls","title":"Complete JAGS Fit — complete_jags_fit","text":"n.adapt controls number discarded samples adaptation stage. n.update controls number discarded samples warm-stage. n.iter controls many samples saved. n.thin controls thinning, every \\(n^th\\) sample kept. n.chains controls number chains.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/component_allocation_visualisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Component Allocation — component_allocation_visualisation","title":"Visualise Component Allocation — component_allocation_visualisation","text":"Show raster plot row observation; column individual MCMC iteration; tile coloured according component membership.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/component_allocation_visualisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Component Allocation — component_allocation_visualisation","text":"","code":"component_allocation_visualisation(object, chain)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/component_allocation_visualisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Component Allocation — component_allocation_visualisation","text":"object Object inherits bmoe_fit. chain integer. Specified chain(s), multiple chains forces list output.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/create_summand_from_symbols.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Call From (List of) Symbols — create_summand_from_symbols","title":"Create Call From (List of) Symbols — create_summand_from_symbols","text":"Output expression(..1 + ..2) based input list(..1, ..2).","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/create_summand_from_symbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Call From (List of) Symbols — create_summand_from_symbols","text":"","code":"create_summand_from_symbols(x)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/create_summand_from_symbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Call From (List of) Symbols — create_summand_from_symbols","text":"x list. Expressions added together.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/d_lcens_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood of Left-Censored Normally Distributed Vector — d_lcens_norm","title":"Likelihood of Left-Censored Normally Distributed Vector — d_lcens_norm","text":"Likelihood Left-Censored Normally Distributed Vector","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/d_lcens_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood of Left-Censored Normally Distributed Vector — d_lcens_norm","text":"","code":"d_lcens_norm(x, mean, sd, log = FALSE)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/d_lcens_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood of Left-Censored Normally Distributed Vector — d_lcens_norm","text":"x object. Expected left-censored Surv. mean, sd, log Passed stats::dnorm stats::pnorm.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/d_lcens_norm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Likelihood of Left-Censored Normally Distributed Vector — d_lcens_norm","text":"Passing non-Surv objects lead stats::dnorm(...), error.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/example_bmoe_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Bayesian Mixture of Experts Model Fit — example_bmoe_fit","title":"Example Bayesian Mixture of Experts Model Fit — example_bmoe_fit","text":"Example Bayesian Mixture Experts Model Fit","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/example_bmoe_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Bayesian Mixture of Experts Model Fit — example_bmoe_fit","text":"","code":"example_bmoe_fit(...)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/example_bmoe_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example Bayesian Mixture of Experts Model Fit — example_bmoe_fit","text":"... Either prior, jags_n inits passed simulate_bmoe.","code":""},{"path":[]},{"path":"https://ncljoshcowley.github.io/bmoe/reference/extract_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Posterior Samples from Bayesian Mixture of Experts — extract_draws","title":"Extract Posterior Samples from Bayesian Mixture of Experts — extract_draws","text":"Extract Posterior Samples Bayesian Mixture Experts","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/extract_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Posterior Samples from Bayesian Mixture of Experts — extract_draws","text":"","code":"extract_draws(object, varname, ...)  # S3 method for bmoe_fit extract_draws(object, varname, ...)  # S3 method for bmoe_simstudy extract_draws(object, varname, ...)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/extract_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Posterior Samples from Bayesian Mixture of Experts — extract_draws","text":"object Object inherits bmoe_fit. varname character. Variable name defined model. ... dots future extensions must empty.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/extract_draws.html","id":"simulation-study","dir":"Reference","previous_headings":"","what":"Simulation Study","title":"Extract Posterior Samples from Bayesian Mixture of Experts — extract_draws","text":"models fit bmoe_sim object, $.truth column may also added. functionality conditional assumed \\(K\\) prior \\(K\\) used simulate data.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/extract_single_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Single Draw — extract_single_draw","title":"Extract Single Draw — extract_single_draw","text":"Extract single draw specified iteration chain.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/extract_single_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Single Draw — extract_single_draw","text":"","code":"extract_single_draw(x, iter, chain)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/extract_single_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Single Draw — extract_single_draw","text":"x bmoe_array object. iter, chain integer. MCMC indexes extract .","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/extract_single_draw.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract Single Draw — extract_single_draw","text":"MCMC dimensions dropped.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/get_dims_from_bmoe_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data and Parameter Dimensions — get_dims_from_bmoe_fit","title":"Get Data and Parameter Dimensions — get_dims_from_bmoe_fit","text":"Helper access names data (y, x, k) displayed users.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/get_dims_from_bmoe_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data and Parameter Dimensions — get_dims_from_bmoe_fit","text":"","code":"get_dims_from_bmoe_fit(object, id)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/get_dims_from_bmoe_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Data and Parameter Dimensions — get_dims_from_bmoe_fit","text":"object Object inherits bmoe_fit. id choice. One n_iters: Number iterations. n_chains: Number chains. n_s: Number observations. n_y: Number response variables. n_k: Assumed number components. p_regr: Number regression predictors (including intercept). p_wt: Number weighting predictors (including intercept).","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/get_names_from_bmoe_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Human Readable Names — get_names_from_bmoe_fit","title":"Get Human Readable Names — get_names_from_bmoe_fit","text":"Helper access names data (y, x, k) displayed users.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/get_names_from_bmoe_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Human Readable Names — get_names_from_bmoe_fit","text":"","code":"get_names_from_bmoe_fit(object)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/get_names_from_bmoe_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Human Readable Names — get_names_from_bmoe_fit","text":"object Object inherits bmoe_fit.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/impl_c_alloc_vis.html","id":null,"dir":"Reference","previous_headings":"","what":"Implementation of component_allocation_visualisation — impl_c_alloc_vis","title":"Implementation of component_allocation_visualisation — impl_c_alloc_vis","text":"Create ggplot2 object chain--chain basis help gc().","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/impl_c_alloc_vis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implementation of component_allocation_visualisation — impl_c_alloc_vis","text":"","code":"impl_c_alloc_vis(x, labels)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/impl_c_alloc_vis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implementation of component_allocation_visualisation — impl_c_alloc_vis","text":"x integer-valued matrix. Rows (columns) denote iterations (indices). labels character. Labels use plot $data.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/mcmc_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ggplot2 Layer(s) for Plotting MCMC Output. — mcmc_layer","title":"Get ggplot2 Layer(s) for Plotting MCMC Output. — mcmc_layer","text":"Get ggplot2 Layer(s) Plotting MCMC Output.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/mcmc_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ggplot2 Layer(s) for Plotting MCMC Output. — mcmc_layer","text":"","code":"mcmc_layer(type, .truth = FALSE)  layer_density(.truth = FALSE)  layer_trace(.truth = FALSE)  layer_acf()"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/mcmc_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ggplot2 Layer(s) for Plotting MCMC Output. — mcmc_layer","text":"type choice. Name supported plot type including \"none\", plots empty user adds layers. \"density\", useful distribution visualisation. \"trace\", useful verifying chain convergence. \"acf\", autocorrelation MCMC samples discrete lags. Alternatively one can pass list custom layers added.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/parse_bmoe_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MoE Formula — parse_bmoe_formula","title":"Parse MoE Formula — parse_bmoe_formula","text":"Internal method allow multiple response multiple RHS within formula.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/parse_bmoe_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MoE Formula — parse_bmoe_formula","text":"","code":"parse_bmoe_formula(object)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/parse_bmoe_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MoE Formula — parse_bmoe_formula","text":"object formula. User supplied model description.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/parse_bmoe_formula.html","id":"extended-formula","dir":"Reference","previous_headings":"","what":"Extended Formula","title":"Parse MoE Formula — parse_bmoe_formula","text":"information extending formula, see Formula package warned https://github.com/rstudio/rstudio/issues/12409. allow user jointly model multiple response variables using +: y01 + y02 ~ x01 + x02 y01 + y02 ~ . RHS can also split two parts using | former used regression latter used weighting. formula one part asserts single design matrix . y01 ~ x01 + x02 | x03 y01 + y02 ~ . | x01","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/pmap_bmoe_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply function to each MCMC Draw — pmap_bmoe_array","title":"Apply function to each MCMC Draw — pmap_bmoe_array","text":"Maps function MCMC iteration chain bmoe_array.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/pmap_bmoe_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply function to each MCMC Draw — pmap_bmoe_array","text":"","code":"pmap_bmoe_array(.l, .f, ..., varname = NULL)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/pmap_bmoe_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply function to each MCMC Draw — pmap_bmoe_array","text":".l list bmoe_array. MCMC inputs placed . .f function. applied draws. ... Deterministic arguments. value passed .f time. varname character. Variable name stored quantity.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/pmap_bmoe_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply function to each MCMC Draw — pmap_bmoe_array","text":"newly generated MCMC quantity, stored bmoe_array.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/predict.bmoe_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction for Bayesian Mixture of Expert Fits — predict.bmoe_fit","title":"Prediction for Bayesian Mixture of Expert Fits — predict.bmoe_fit","text":"response component membership can generated.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/predict.bmoe_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction for Bayesian Mixture of Expert Fits — predict.bmoe_fit","text":"","code":"# S3 method for bmoe_fit predict(object, ..., new_data, type, summarise = TRUE)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/predict.bmoe_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction for Bayesian Mixture of Expert Fits — predict.bmoe_fit","text":"object Object inherits bmoe_fit. ... Extra arguments ignored. new_data data frame. Similar structure original data argument. Setting new_data = NULL signals observed data used. type choice. Determines output type. summarise logical. TRUE, list column output summarised.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/predict.bmoe_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction for Bayesian Mixture of Expert Fits — predict.bmoe_fit","text":"type = \"response\". Tibble output list column per response. type = \"class\". Component membership, z, returned list column. type = \"raw\". bmoe_array MCMC object returned.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/printer_tabset.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Tabsets (via knitr::knit_print) — printer_tabset","title":"Print Tabsets (via knitr::knit_print) — printer_tabset","text":"Converts list Quarto / RMD tabset using names tab headings.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/printer_tabset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Tabsets (via knitr::knit_print) — printer_tabset","text":"","code":"printer_tabset(x, options, ...)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/printer_tabset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Tabsets (via knitr::knit_print) — printer_tabset","text":"x list. element passed knit_print within tabs. options, ... unused arguments required knit_print.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/printer_tabset.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Print Tabsets (via knitr::knit_print) — printer_tabset","text":"https://github.com/nclJoshCowley/jcutils/blob/master/R/knitr-printers.R","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics tidy ggplot2 autoplot","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/render_bmoe_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Analysis Report — render_bmoe_fit","title":"Render Analysis Report — render_bmoe_fit","text":"Render Quarto document produce output files .Rds .html.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/render_bmoe_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Analysis Report — render_bmoe_fit","text":"","code":"render_bmoe_fit(object, outfile)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/render_bmoe_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Analysis Report — render_bmoe_fit","text":"object Object inherits bmoe_fit. outfile character. Name output file(s); file extensions dropped.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/render_bmoe_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render Analysis Report — render_bmoe_fit","text":"Silently return input object use pipes.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/s3_register.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a method for a suggested dependency — s3_register","title":"Register a method for a suggested dependency — s3_register","text":"Generally, recommend way register S3 method use S3Method() namespace directive (often generated automatically @export roxygen2 tag). However, technique requires generic imported package, sometimes want suggest package, provide method package loaded. s3_register() can called package's .onLoad() dynamically register method generic's package loaded.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/s3_register.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a method for a suggested dependency — s3_register","text":"generic Name generic form pkg::generic. class Name class method Optionally, implementation method. default, found looking function called generic.class package environment. Note providing method can dangerous use devtools. namespace method reloaded devtools::load_all(), function keep inheriting old namespace. might cause crashes dangling .Call() pointers.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/s3_register.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register a method for a suggested dependency — s3_register","text":"R 3.5.0 later, s3_register() also useful demonstrating class creation vignette, since method lookup longer always involves lexical scope. R 3.6.0 later, can achieve similar effect using \"delayed method registration\", .e. placing following NAMESPACE file:","code":"if (getRversion() >= \"3.6.0\") {   S3method(package::generic, class) }"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/s3_register.html","id":"usage-in-other-packages","dir":"Reference","previous_headings":"","what":"Usage in other packages","title":"Register a method for a suggested dependency — s3_register","text":"avoid taking dependency vctrs, copy source s3_register() package. licensed permissive unlicense make crystal clear happy . need include license even credit us using function.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/s3_register.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a method for a suggested dependency — s3_register","text":"","code":"# A typical use case is to dynamically register tibble/pillar methods # for your class. That way you avoid creating a hard dependency on packages # that are not essential, while still providing finer control over # printing when they are used.  .onLoad <- function(...) {   s3_register(\"pillar::pillar_shaft\", \"vctrs_vctr\")   s3_register(\"tibble::type_sum\", \"vctrs_vctr\") }"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/scale_x_iterations.html","id":null,"dir":"Reference","previous_headings":"","what":"Position Scale for MCMC Iterations — scale_x_iterations","title":"Position Scale for MCMC Iterations — scale_x_iterations","text":"Wrapper around scale_x_continuous updated defaults thousands MCMC iterations.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/scale_x_iterations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Position Scale for MCMC Iterations — scale_x_iterations","text":"","code":"scale_x_iterations(..., n = 5)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/scale_x_iterations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Position Scale for MCMC Iterations — scale_x_iterations","text":"... passed scale_x_continuous n integer. Number desirable breaks.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_bmoe.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Mixture of Experts Linear Regression — example_simulate_bmoe","title":"Simulate Mixture of Experts Linear Regression — example_simulate_bmoe","text":"Simulates VISP model splits training test splits.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_bmoe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Mixture of Experts Linear Regression — example_simulate_bmoe","text":"","code":"example_simulate_bmoe(..., multiple_y = FALSE)  example_label_switching_bmoe()  simulate_bmoe(n_s, regr, wt, prec, n_loo, q_cens = NULL)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_bmoe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Mixture of Experts Linear Regression — example_simulate_bmoe","text":"... Passed simulate_bmoe. multiple_y logical. TRUE, example defaults multiple y. n_s integer. Total number simulated observations. regr array. Regression coefficients. wt matrix. Weighting coefficients. prec numeric. Precision parameter per component. n_loo integer. Number observations moved test set. q_cens numeric [0, 1]. Optional artificial left-censoring level.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_bmoe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Mixture of Experts Linear Regression — example_simulate_bmoe","text":"List class bmoe_sim.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_bmoe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Mixture of Experts Linear Regression — example_simulate_bmoe","text":"Since dim(regr) = c(n_x + 1, n_y, n_k), dimension input also asserts n_x, n_y n_k. Component membership simulated per observation, per response variable. Hence, dim(wt) = c(n_x + 1, n_k). simulated x matrix used regression weighting. n_s - n_loo total observations kept $data.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_bmoe.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Simulate Mixture of Experts Linear Regression — example_simulate_bmoe","text":"example_label_switching_bmoe(): Reproducible example label switching example.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_multilogit.html","id":null,"dir":"Reference","previous_headings":"","what":"Multinomial Logit Simulation — simulate_multilogit","title":"Multinomial Logit Simulation — simulate_multilogit","text":"Multinomial Logit Simulation","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_multilogit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multinomial Logit Simulation — simulate_multilogit","text":"","code":"simulate_multilogit(x_wt, wt)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_multilogit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multinomial Logit Simulation — simulate_multilogit","text":"x_wt matrix (n p_w). Design matrix used weighting. wt matrix (p_w k). Weighting regression matrix.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Design Matrix — simulate_x","title":"Simulate Design Matrix — simulate_x","text":"design matrix chosen width simulated use studies.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Design Matrix — simulate_x","text":"","code":"simulate_x(n_s, n_x, .scale = TRUE)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/simulate_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Design Matrix — simulate_x","text":"n_s integer. Number observations (rows). n_x integer. Number explanatory variables (columns). .scale logical. TRUE, output scaled returned.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/slice_by_component_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Slice by Component Values — slice_by_component_values","title":"Slice by Component Values — slice_by_component_values","text":"Delegates 'per component' slicing get   unlike x[, z[]] returns matrix.","code":"for (i in seq_along(z)) x[i, z[i]]"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/slice_by_component_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slice by Component Values — slice_by_component_values","text":"","code":"slice_by_component_values(x, z)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/softmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Softmax Function — softmax","title":"Softmax Function — softmax","text":"Smoothed version \"argmax\"; also known inverse multinomial logit.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/softmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Softmax Function — softmax","text":"","code":"softmax(x, ...)  # S3 method for default softmax(x, ...)  # S3 method for numeric softmax(x, ...)  # S3 method for matrix softmax(x, margin = 1, ...)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/softmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Softmax Function — softmax","text":"x objects vector matrix. ... dots future extensions must empty. margin integer. Dimension apply function , defaults 1 (rows).","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/split_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Splits Call into List — split_call","title":"Splits Call into List — split_call","text":"Splits Call List","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/split_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Splits Call into List — split_call","text":"","code":"split_call(x, sep = \"|\")"},{"path":[]},{"path":"https://ncljoshcowley.github.io/bmoe/reference/subset_bmoe.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset MCMC Output — subset_bmoe","title":"Subset MCMC Output — subset_bmoe","text":"Subset MCMC output update details within bmoe() fit.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/subset_bmoe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset MCMC Output — subset_bmoe","text":"","code":"subset_bmoe(object, iters = NULL, chains = NULL)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/subset_bmoe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset MCMC Output — subset_bmoe","text":"object Object inherits bmoe_fit. iters integer. Vector indices keep, default includes . chains integer. Vector chains keep, default includes .","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/sweep_ref_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Sweep Out Reference Values — sweep_ref_vals","title":"Sweep Out Reference Values — sweep_ref_vals","text":"Translates matrix satisfy corner constraint, say x[, ref] = 0.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/sweep_ref_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sweep Out Reference Values — sweep_ref_vals","text":"","code":"sweep_ref_vals(x, ref = 1)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/sweep_ref_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sweep Out Reference Values — sweep_ref_vals","text":"x matrix. Matrix translated. ref integer. Column index used reference.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/sweep_ref_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sweep Out Reference Values — sweep_ref_vals","text":"Matrix elements defined [, j] = x[, j] - x[, ref].","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/transpose_Surv_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Splits a list of Surv objects into JAGS data — transpose_Surv_list","title":"Splits a list of Surv objects into JAGS data — transpose_Surv_list","text":"Convert list Surv objects two matrices identical dimension.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/transpose_Surv_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Splits a list of Surv objects into JAGS data — transpose_Surv_list","text":"","code":"transpose_Surv_list(y)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/transpose_Surv_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Splits a list of Surv objects into JAGS data — transpose_Surv_list","text":"y list. Elements inheriting Surv assumed uncensored data.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/transpose_Surv_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Splits a list of Surv objects into JAGS data — transpose_Surv_list","text":"List y matrix is_nd matrix.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/unite_and_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Unite Columns into String — unite_and_extract","title":"Unite Columns into String — unite_and_extract","text":"Unite Columns String","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/unite_and_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unite Columns into String — unite_and_extract","text":"","code":"unite_and_extract(data, sep = \",\")"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/unite_and_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unite Columns into String — unite_and_extract","text":"data data frame. Contains columns joined. sep character. Passed paste.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/unite_and_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unite Columns into String — unite_and_extract","text":"character vector, paste(df[, 1], ..., df[, N], sep = sep).","code":""},{"path":[]},{"path":"https://ncljoshcowley.github.io/bmoe/reference/utils-imports.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports — utils-imports","title":"Imports — utils-imports","text":"Imports packages used within package","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/utils-imports.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Imports — utils-imports","text":"rlang::dot-data(), data pronoun. rlang::op-null-default(), default value NULL operator.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/validate_permutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Permutations — validate_permutations","title":"Validate Permutations — validate_permutations","text":"Validate create described permutation structure.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/validate_permutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Permutations — validate_permutations","text":"","code":"validate_permutations(x, n_chains, n_iters)  # S3 method for list validate_permutations(x, n_chains, n_iters)  # S3 method for matrix validate_permutations(x, n_chains, n_iters)  # S3 method for numeric validate_permutations(x, n_chains, n_iters)"},{"path":"https://ncljoshcowley.github.io/bmoe/reference/validate_permutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Permutations — validate_permutations","text":"x list; matrix; vector. Object coerced permutations. n_chains, n_iters integer. Dimensions check assumed.","code":""},{"path":"https://ncljoshcowley.github.io/bmoe/reference/validate_permutations.html","id":"permutations","dir":"Reference","previous_headings":"","what":"Permutations","title":"Validate Permutations — validate_permutations","text":"Permutations stored list \\(^{th}\\) elements corresponds \\(^{th}\\) chain. element matrix one permutation per row iteration. Note vector can supplied apply scheme MCMC output. matrix can supplied apply relabelling chains. NULL can supplied use boys_henderson_2002(). permutation c(3, 1, 2) denotes relabelling 1 -> 3 2 -> 1 3 -> 2","code":""}]
